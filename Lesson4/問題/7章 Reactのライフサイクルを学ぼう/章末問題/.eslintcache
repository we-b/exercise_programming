[{"/Users/tech-camp/exercise_programming/Lesson4/解答/7章 Reactのライフサイクルを学ぼう/章末問題/src/reportWebVitals.js":"1","/Users/tech-camp/exercise_programming/Lesson4/解答/7章 Reactのライフサイクルを学ぼう/章末問題/src/pages/home/index.tsx":"2","/Users/tech-camp/exercise_programming/Lesson4/解答/7章 Reactのライフサイクルを学ぼう/章末問題/src/pages/game/index.tsx":"3"},{"size":362,"mtime":1608096016000,"results":"4","hashOfConfig":"5"},{"size":307,"mtime":1609380993577,"results":"6","hashOfConfig":"5"},{"size":2162,"mtime":1609380997983,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4ip1n0",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/tech-camp/exercise_programming/Lesson4/解答/7章 Reactのライフサイクルを学ぼう/章末問題/src/reportWebVitals.js",[],"/Users/tech-camp/exercise_programming/Lesson4/解答/7章 Reactのライフサイクルを学ぼう/章末問題/src/pages/home/index.tsx",[],"/Users/tech-camp/exercise_programming/Lesson4/解答/7章 Reactのライフサイクルを学ぼう/章末問題/src/pages/game/index.tsx",["15","16"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {}\ninterface State {\n selectCount: number;\n randomCount: number;\n battleCount: number;\n winCount:number;\n resultString: string;\n}\nexport default class Index extends React.Component<Props, State> {\nconstructor(props: Props) {\n super(props);\n this.state = {\n    selectCount: 0,\n    randomCount: 0,\n    battleCount: 0,\n    winCount: 0,\n    resultString:  \"番号を選んでね！\",\n };\n}\n\ncomponentDidMount() {\n alert(\"番号当てゲームです。\\n ページが遷移したら、好きな番号を選んでください。\");\n}\n\nhandleOnClick = (val: number): void => {\n this.setState({ battleCount: this.state.battleCount + 1 });\n this.setState({ selectCount: val });\n};\n\ncomponentWillUnmount() {\n alert(\n   `【戦績】\\n${this.state.battleCount}戦中、${this.state.winCount}勝でした。`\n );\n}\n\ncomponentDidUpdate(prevProps: Props, prevState: State) {\nif (prevState.battleCount !== this.state.battleCount) {\n  const randomCount: number = Math.floor(Math.random() * 2);\n  this.setState({ randomCount: randomCount });\n  this.confirmResult(this.state.selectCount,randomCount);\n}\n}\n\nconfirmResult(selectCount: number, randomCount: number): void {\nif (selectCount === randomCount) {\n  return this.setState({\n    resultString: \"あたり！\",\n    winCount: this.state.winCount + 1,\n  });\n} else {\n  return this.setState({\n    resultString: \"はずれ！\",\n  });\n}\n}\n\nrender() {\n return (\n   <div>\n     <h1>TechPlay</h1>\n     <h2>番号当てゲーム</h2>\n     <p>{this.state.resultString}</p>\n     <button\n      onClick={() => {\n        this.handleOnClick(0)\n     }}\n     >\n     0</button>\n     <button\n      onClick={() => {\n        this.handleOnClick(1)\n     }}\n     >\n     1</button>\n     <p>相手の番号</p>\n     <button\n     style={{\n      backgroundColor: this.state.randomCount == 0 ? \"#ffb6c1\" : \"#ffffff\",\n     }}\n    >\n     0</button>\n     <button\n     style={{\n      backgroundColor: this.state.randomCount == 1 ? \"#ffb6c1\" : \"#ffffff\",\n     }}\n     >\n     1</button>\n     <Link to=\"/\">\n     <h3>トップページへ戻る</h3>\n     </Link>\n   </div>\n );\n}\n}",{"ruleId":"17","severity":1,"message":"18","line":81,"column":47,"nodeType":"19","messageId":"20","endLine":81,"endColumn":49},{"ruleId":"17","severity":1,"message":"18","line":87,"column":47,"nodeType":"19","messageId":"20","endLine":87,"endColumn":49},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]